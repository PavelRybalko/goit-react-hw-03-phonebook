{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","ContactItem","contact","id","name","number","onDeleteContact","ContactList__item","ContactList__text","type","onClick","ContactList","contacts","title","map","ContactForm","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","validateForm","props","onSubmit","onCheckUnique","alert","this","autoComplete","input","onChange","button","Component","Filter","label","App","filter","addContact","shortid","generate","handleCheckUnique","isExistContact","find","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.040c824d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__item\":\"ContactItem_ContactList__item__2nmmH\",\"ContactList__text\":\"ContactItem_ContactList__text__bnmcv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3-ygQ\",\"input\":\"Filter_input__bMJEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2xoCW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactForm_title__3Tow6\",\"ContactForm\":\"ContactForm_ContactForm__2RCgB\",\"input\":\"ContactForm_input__2EJZa\",\"button\":\"ContactForm_button__2pzg3\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from 'react';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ contact: { id, name, number }, onDeleteContact }) => (\n  <>\n    <li className={s.ContactList__item}>\n      <p className={s.ContactList__text}>\n        <span>{name}</span> : <span>{number}</span>\n      </p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  </>\n);\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactItem from '../ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <>\n    <h2 className={s.title}>Contacts</h2>\n    <ul className={s.ContactList}>\n      {contacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          contact={contact}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  </>\n);\n\nContactList.propTypes = {\n  contact: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      number: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\n// const INITIAL_STATE = { name: \"\", number: \"\" };\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const isValidatedForm = this.validateForm();\n    if (!isValidatedForm) return;\n    this.props.onSubmit(this.state);\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  // resetForm = () => this.setState(INITIAL_STATE);\n\n  validateForm = () => {\n    const { onCheckUnique } = this.props;\n    const { name, number } = this.state;\n    if (!name || !number) {\n      alert('Some fields are empty! Please write something');\n      return;\n    }\n\n    return onCheckUnique(name);\n  };\n\n  render() {\n    return (\n      <>\n        <h2 className={s.title}>Phonebook</h2>\n        <form className={s.ContactForm} onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              autoComplete=\"off\"\n              className={s.input}\n              name=\"name\"\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Number\n            <input\n              autoComplete=\"off\"\n              className={s.input}\n              name=\"number\"\n              type=\"tel\"\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCheckUnique: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name:\n    <input className={s.input} type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/Container';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  handleCheckUnique = name => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exist!');\n\n    return !isExistContact;\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <ContactForm\n          onSubmit={this.addContact}\n          onCheckUnique={this.handleCheckUnique}\n        />\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__3u48R\",\"ContactList\":\"ContactList_ContactList__jtQMB\"};"],"sourceRoot":""}